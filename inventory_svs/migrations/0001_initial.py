# Generated by Django 4.2.9 on 2025-01-21 16:38

import datetime
from django.db import migrations, models
import inventory_svs.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturer_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('org_id', models.UUIDField(db_index=True)),
                ('manufacturer_name', models.TextField()),
                ('manufacturer_contact_person', models.TextField()),
                ('manufacturer_email', models.TextField()),
                ('manufacturer_contact_number', models.TextField()),
                ('manufacturer_address', models.TextField()),
                ('manufacturer_gstn', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('org_id', models.UUIDField(db_index=True)),
                ('manufacturer_id', models.UUIDField()),
                ('product_name', models.TextField()),
                ('product_desc', models.TextField(help_text='Content of the post')),
                ('product_type', models.TextField()),
                ('product_packaging', models.TextField()),
                ('product_measurement_unit', models.CharField(choices=[('KG', 'Kilogram'), ('METER', 'Meter'), ('LITRE', 'Litre'), ('PACK', 'Pack'), ('PIECE', 'Piece')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('productBatch_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('org_id', models.UUIDField(db_index=True)),
                ('product_id', models.UUIDField(db_index=True)),
                ('productBatch_created_date', models.DateTimeField(default=datetime.datetime.now)),
                ('productBatch_cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('productBatch_mrp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('productBatch_discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('productBatch_currentOffers', models.CharField(max_length=100)),
                ('productBatch_created_by', models.DateTimeField(default=datetime.datetime.now)),
                ('productBatch_supplier_ID', models.CharField(max_length=100)),
                ('sku_id', models.CharField(max_length=100)),
                ('productBatch_DateOfManufacture', models.DateField()),
                ('productBatch_DateOfExpiry', models.DateField(default=datetime.date(2124, 12, 28))),
            ],
        ),
        migrations.CreateModel(
            name='ProductBatchCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productBatch_id', models.UUIDField(db_index=True, verbose_name=inventory_svs.models.ProductBatch)),
                ('available_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ProductBatchLedger',
            fields=[
                ('productBatchledger_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productBatch_id', models.UUIDField(db_index=True, verbose_name=inventory_svs.models.ProductBatch)),
                ('order_id', models.UUIDField()),
                ('order_type', models.CharField(choices=[('PROVISIONING', 'Provisioning'), ('SALE', 'Sale'), ('BACKORDER', 'Backorder'), ('RETURN', 'Return'), ('EXCHANGE', 'Exchange'), ('TRIAL', 'Trial'), ('GIFT', 'Gift'), ('PROMOTIONAL', 'Promotional'), ('STOCK_ADJUSTMENT', 'Stock Adjustment'), ('INTERNAL_TRANSFER', 'Internal Transfer'), ('PURCHASE_ORDER', 'Purchase Order'), ('STOCK_DAMAGE', 'Stock Damage'), ('STOCK_RETURN', 'Stock Return'), ('STOCK_ENTRY', 'Stock Entry')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_time', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('org_id', models.UUIDField(db_index=True)),
                ('supplier_name', models.TextField()),
                ('supplier_contact_person', models.TextField()),
                ('returnable', models.BooleanField(default=False)),
                ('supplier_email', models.TextField()),
                ('supplier_contact_number', models.TextField()),
                ('supplier_address', models.TextField()),
                ('supplier_gstn', models.TextField()),
            ],
        ),
    ]
