"""add role column

Revision ID: df1ac1247bcf
Revises: 
Create Date: 2025-01-26 22:04:31.856752

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'df1ac1247bcf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('salutation', sa.Enum('MR', 'MISS', 'MRS', name='salutation'), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('whatsapp_number', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_customer_tenant_id'), 'customer', ['tenant_id'], unique=False)
    op.drop_table('customers')
    op.add_column('order_items', sa.Column('rate', sa.Float(), nullable=True))
    op.add_column('order_items', sa.Column('discount_percentage', sa.Float(), nullable=True))
    op.add_column('order_items', sa.Column('Tax', sa.Float(), nullable=True))
    op.add_column('order_items', sa.Column('MarketingCampain_Discount_return_adjustment', sa.Float(), nullable=True))
    op.add_column('order_items', sa.Column('amount', sa.Float(), nullable=True))
    op.create_index(op.f('ix_order_items_tenant_id'), 'order_items', ['tenant_id'], unique=False)
    op.drop_column('order_items', 'mrp')
    op.drop_column('order_items', 'price')
    op.add_column('orders', sa.Column('crm_id', sa.UUID(), nullable=True))
    op.add_column('orders', sa.Column('sub_total', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('Tax', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('Discount', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('MarketingCampain_Discount', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('Other_Charges', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('Total', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('related_order_id', sa.UUID(), nullable=True))
    op.create_index(op.f('ix_orders_tenant_id'), 'orders', ['tenant_id'], unique=False)
    op.create_foreign_key(None, 'orders', 'customer', ['crm_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'order_items', ['related_order_id'], ['id'])
    op.drop_column('orders', 'final_price')
    op.drop_column('orders', 'total_order_value')
    op.drop_column('orders', 'sale_at')
    op.drop_column('orders', 'marketing_campaign_discount')
    op.drop_column('orders', 'customer_name')
    op.drop_column('orders', 'pos_discount')
    op.drop_column('orders', 'phone_number')
    op.create_index(op.f('ix_product_batch_audits_tenant_id'), 'product_batch_audits', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_product_batch_counts_tenant_id'), 'product_batch_counts', ['tenant_id'], unique=False)
    op.add_column('product_batches', sa.Column('rate', sa.Float(), nullable=True))
    op.add_column('product_batches', sa.Column('csgst_percentage', sa.Float(), nullable=True))
    op.add_column('product_batches', sa.Column('sgst_percentage', sa.Float(), nullable=True))
    op.add_column('product_batches', sa.Column('igst_percentage', sa.Float(), nullable=True))
    op.add_column('product_batches', sa.Column('cess_percentage', sa.Float(), nullable=True))
    op.add_column('product_batches', sa.Column('othertax_percentage', sa.Float(), nullable=True))
    op.add_column('product_batches', sa.Column('batch_id', sa.String(), nullable=True))
    op.add_column('product_batches', sa.Column('QRcode_type', sa.Enum('INTERNAL_UPIC', 'EPS', 'UPC', name='qrcodetype'), nullable=True))
    op.add_column('product_batches', sa.Column('QRcode', sa.String(), nullable=True))
    op.create_index(op.f('ix_product_batches_tenant_id'), 'product_batches', ['tenant_id'], unique=False)
    op.drop_column('product_batches', 'mrp')
    op.drop_column('product_batches', 'batch_number')
    op.add_column('products', sa.Column('pid', sa.String(), nullable=True))
    op.create_index(op.f('ix_products_tenant_id'), 'products', ['tenant_id'], unique=False)
    op.create_unique_constraint(None, 'products', ['pid'])
    op.add_column('users', sa.Column('role', sa.String(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('user_id', sa.UUID(), nullable=True))
    op.drop_index('ix_users_username', table_name='users')
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_foreign_key(None, 'users', 'users', ['user_id'], ['id'])
    op.create_index(op.f('ix_vendors_tenant_id'), 'vendors', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vendors_tenant_id'), table_name='vendors')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.drop_column('users', 'user_id')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'role')
    op.drop_constraint(None, 'products', type_='unique')
    op.drop_index(op.f('ix_products_tenant_id'), table_name='products')
    op.drop_column('products', 'pid')
    op.add_column('product_batches', sa.Column('batch_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('product_batches', sa.Column('mrp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_product_batches_tenant_id'), table_name='product_batches')
    op.drop_column('product_batches', 'QRcode')
    op.drop_column('product_batches', 'QRcode_type')
    op.drop_column('product_batches', 'batch_id')
    op.drop_column('product_batches', 'othertax_percentage')
    op.drop_column('product_batches', 'cess_percentage')
    op.drop_column('product_batches', 'igst_percentage')
    op.drop_column('product_batches', 'sgst_percentage')
    op.drop_column('product_batches', 'csgst_percentage')
    op.drop_column('product_batches', 'rate')
    op.drop_index(op.f('ix_product_batch_counts_tenant_id'), table_name='product_batch_counts')
    op.drop_index(op.f('ix_product_batch_audits_tenant_id'), table_name='product_batch_audits')
    op.add_column('orders', sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('pos_discount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('customer_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('marketing_campaign_discount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('sale_at', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('total_order_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('final_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_index(op.f('ix_orders_tenant_id'), table_name='orders')
    op.drop_column('orders', 'related_order_id')
    op.drop_column('orders', 'Total')
    op.drop_column('orders', 'Other_Charges')
    op.drop_column('orders', 'MarketingCampain_Discount')
    op.drop_column('orders', 'Discount')
    op.drop_column('orders', 'Tax')
    op.drop_column('orders', 'sub_total')
    op.drop_column('orders', 'crm_id')
    op.add_column('order_items', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('order_items', sa.Column('mrp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_order_items_tenant_id'), table_name='order_items')
    op.drop_column('order_items', 'amount')
    op.drop_column('order_items', 'MarketingCampain_Discount_return_adjustment')
    op.drop_column('order_items', 'Tax')
    op.drop_column('order_items', 'discount_percentage')
    op.drop_column('order_items', 'rate')
    op.create_table('customers',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('salutation', postgresql.ENUM('MR', 'MISS', 'MRS', name='salutation'), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('whatsapp_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name='customers_tenant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='customers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customers_pkey'),
    sa.UniqueConstraint('phone_number', name='customers_phone_number_key')
    )
    op.drop_index(op.f('ix_customer_tenant_id'), table_name='customer')
    op.drop_table('customer')
    # ### end Alembic commands ###
